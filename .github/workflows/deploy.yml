name: CI/CD Pipeline for OpenTelemetry App

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1                  # ‚Üê your AWS region
      CLUSTER_NAME: otel-cluster-1           # ‚Üê your EKS cluster name
      NAMESPACE: otel-namespace              # ‚Üê Kubernetes namespace
      IMAGE_TAG: latest                      # ‚Üê Docker image tag

      DOCKER_USERNAME: your_dockerhub_username          # ‚Üê üîÅ FILL THIS
      DOCKER_PASSWORD: your_dockerhub_password          # ‚Üê üîÅ FILL THIS

      AWS_ACCESS_KEY_ID: your_aws_access_key            # ‚Üê üîÅ FILL THIS
      AWS_SECRET_ACCESS_KEY: your_aws_secret_key        # ‚Üê üîÅ FILL THIS

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ env.DOCKER_USERNAME }}/otel-app:${{ env.IMAGE_TAG }} .
        docker push ${{ env.DOCKER_USERNAME }}/otel-app:${{ env.IMAGE_TAG }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig for EKS
      run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Add and Update Helm Repository
      run: |
        helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
        helm repo update

    - name: Deploy with Helm
      run: |
        helm upgrade --install otel-app open-telemetry/opentelemetry-demo \
          --namespace ${{ env.NAMESPACE }} --create-namespace \
          --set image.repository=${{ env.DOCKER_USERNAME }}/otel-app \
          --set image.tag=${{ env.IMAGE_TAG }} \
          --values values.yaml

    - name: Smoke Test - Get Pods
      run: kubectl get pods -n ${{ env.NAMESPACE }}

    - name: Rollback on Failure
      if: failure()
      run: |
        echo "Deployment failed ‚Äî rolling back..."
        helm rollback otel-app --namespace ${{ env.NAMESPACE }}
